# -*- coding = utf-8 -*-
# @Time : 2022/11/9 17:44
# @Author : anpeng
# @File : a_Python中面向对象基础.py
# @Software : PyCharm
"""
面向对象：是一种抽象化的编程思想，很多编程语言中(java、C++等)都有的一种编程思想。
    面向对象和面向过程的区别：
        现实举例：洗衣服--手洗和机洗。
        手洗(面向过程)：找盆-放水-加洗衣粉-浸泡-搓洗-拧干水-倒水-漂洗N次-拧干-晾晒
        机洗(面向对象)：打开洗衣机-放衣服-加洗衣粉-按下开始按钮-晾晒。

类和对象：类是对一种事物的抽象，对象是对所属类的具体实现。即，用类可以实例化(创建)一个对象。开发中，先有类，再有对象。
    类和对象的区别：
        现实举例：方便快捷的洗衣机是工厂按照设计图纸制作出来的。
        设计图纸--类
        洗衣机--对象

    类：是对一系列具有相同特行和行为的事物的统称，是一个抽象概念，不是真实存在时事物。
        * 特征即是属性
        * 行为即是方法
    对象：是类的实例化，类的功能表达载体。

定义类：
    clazz 类名():
        code
        ......
    *** 注意：类名要满足标识符命名规则，同时遵循大驼峰命名习惯。

创建对象：
    对象名 = 类名()

Python的项目文件结构
    包：创建包时，会自动生成__init__.py文件，用于说明它是一哥个包，而不是文件夹，可以被别的包调用。
    模块：即一个python文件。

    在不同包、或者不同模块之间相互调用：
        原始方法：需要被导入包名、模块名、类名、函数名、变量名等需要符合标识符命名规则(字母、数字、下划线组成，尤其是不能以数字开头),否则导入时识别不了。
            1、同包中的不同模块之间：
                from 模块名 import 类名/函数名/变量名
            2、不同包中的不同模块之间：
                1) 先导入模块 -- from 包名 import 模块名
                   再调用模块 -- 模块名.函数()/类名()/变量名
                2) 直接引入不同包的某一模块中的函数或类或变量
                   from 包名.模块名 import 类名/函数名/变量名
                   直接调用函数()等。

        最新方法：其次，在(file–>setting–>project:server–>project structure)中包设置为source文件，包名变蓝。
                只要文件夹变蓝后，就可以在其它任意位置直接导入其中的source文件(模块)，使用方法如下：
                1) 直接引用需要使用的模块或函数或类或变量，报错后按alt+enter会自动补全。
                2) from 模块名 import 函数名/类名/变量 -- 直接调用函数名()/类名()/变量名
                3) import 模块名 -- 间接调用模块名.函数名()/类名()/变量名
"""
# 1.定义类
# 需求：洗衣机，功能：洗衣服.
from Washer import Washer

"""
    clazz 类名:
        code
        ......
"""
# Washer类的定义在Washer.py文件中

# 2.创建对象
"""
    对象名 = 类名()
"""
haier = Washer('haier')

# 3.验证成果
# 打印haier对象
print(haier)
# 使用wash功能 -- 实例方法/对象方法-- 对象名.wash()
haier.wash()
