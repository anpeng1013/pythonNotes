# -*- coding = utf-8 -*-
# @Time : 2022/11/9 17:44
# @Author : anpeng
# @File : a_Python中面向对象基础.py
# @Software : PyCharm
"""
面向对象：是一种抽象化的编程思想，很多编程语言中(java、C++等)都有的一种编程思想。
    面向对象和面向过程的区别：
        现实举例：洗衣服--手洗和机洗。
        手洗(面向过程)：找盆-放水-加洗衣粉-浸泡-搓洗-拧干水-倒水-漂洗N次-拧干-晾晒
        机洗(面向对象)：打开洗衣机-放衣服-加洗衣粉-按下开始按钮-晾晒。

面向对象三大特性：
     封装：
        * 将属性和方法写到类的里面的操作即为封装
        * 封装可以为属性和方法添加私有属性。
     继承：
        * 子类默认继承父类的所有属性和方法。
        * 子类可以重写父类的属性和方法。

     多态：
        * 父类引用指向子类对象。
        * 传入不同的对象，产生不同的结果。

类和实例：类是对一种事物的抽象，实例是对所属类的具体实现。即，用类可以实例化(创建)一个对象。开发中，先有类，再有实例。
    类和实例的区别：
        现实举例：方便快捷的洗衣机是工厂按照设计图纸制作出来的。
        设计图纸--类
        洗衣机--实例

    类：是对一系列具有相同特行和行为的事物的统称，是一个抽象概念。
        * 特征即是属性
        * 行为即是方法
    实例：是类的实现，类的功能表达载体。

    对象：在java和python中，类和实例都被可以称为一个对象。
        类对象中，定义了类的属性和行为。
        实例对象，是类对象创建的实例。

定义类：
    class 类名(object): # 括号内的是父类，如果不写括号，默认继承object基类。
        code
        ......
    *** 注意：类名要满足标识符命名规则，同时遵循大驼峰命名习惯。

创建实例：
    实例名 = 类名()

pass 关键字：
    1、pass是一个空的语句块，表示什么也不做。
    2、pass的作用是为了保证程序结构的完整性，否则报错。
    3、常见用处：如果定义了一个函数，或者一个类，暂时不知道该函数或类具体的业务逻辑，可以使用pass语句，以让程序正常运行，不影响其他代码。

"""
# 1.定义类
# 需求：洗衣机，功能：洗衣服.
from Washer import Washer  # 导入模块方法见[c_Python高阶知识-->b_Python中的模块和包]

"""
    class 类名:
        code
        ......
"""
# Washer类的定义在Washer.py文件中

# 2.创建对象
"""
    对象名 = 类名()
"""
haier = Washer('haier')

# 3.验证成果
# 打印haier对象
print(haier)
# 使用wash功能 -- 实例方法/对象方法-- 对象名.wash()
haier.wash()
