# -*- coding = utf-8 -*-
# @Time : 2022/10/23 11:57
# @Author : anpeng
# @File : 26-Python中的文件操作.py
# @Software : PyCharm

"""
1.文件操作的作用
    把一些内容（数据）存储起来，可以让程序下一次执行的时候直接使用，而不必重新制作一份，省时省力。
2.文件的基本操作
    打开：使用open(file_name,mode)，打开一个已经存在的文件，或者创建一个新文件。file()和open()函数功能和用法完全相同。
            name：是要打开的目标文件名的字符串（可以包含文件所在的具体路径）
            mode：设置打开文件的访问模式-只读、写入、追加等，默认为只读。
            mode    description
              r     以只读方式打开文件。文件的指针将会放在文件的开头，此为默认模式。若文件不存在则报错。
              rb    以二进制格式打开一个文件用于只读，文件指针在开头。若文件不存在则报错。
              r+    以读和写的方式打开文件，文件指针在开头。若文件不存在则报错。
              rb+   以二进制格式打开文件用于读和写，文件指针在开头。若文件不存在则报错。

              w     以只能写入的方式打开文件，如果该文件已存在则打开文件，并从开头进行编辑，即原有内容会被删除；若文件不存在则新建文件。
              wb    以二进制格式打开文件只用于写入，如果该文件已存在则打开文件，并从开头进行编辑，即原有内容会被删除；若文件不存在则新建文件。
              w+    打开一个文件用于读写，如果该文件已存在则打开文件，并从开头进行编辑，即原有内容会被删除；若文件不存在则新建文件。
              wb+   以二进制格式打开文件用于读写，如果该文件已存在则打开文件，并从开头进行编辑，即原有内容会被删除；若文件不存在则新建文件。

              a     打开一个文件用于追加内容，文件指针在末尾，新写入的内容会被写入已有内容之后。若文件不存在则新建文件。
              ab    以二进制追加模式打开文件，文件指针在末尾，文件指针在末尾，新写入的内容会被写入已有内容之后。若文件不存在则新建文件。
              a+    以读和追加的模式打开文件，文件指针在末尾，新写入的内容会被写入已有内容之后。若文件不存在则新建文件。
              ab+   以二进制读和追加的模式打开，文件指针在末尾，新写入的内容会被写入已有内容之后。若文件不存在则新建文件。

    读写：read()、write()
    关闭：close()
    注意：可以只打开和关闭文件，不进行任何读写操作，但是比较占内存。
3.文件备份
4.文件和文件夹的操作
"""

# 1.使用open()函数，新建或打开已存在的文件
newfile = open('26-Python中的文件操作.txt', 'w+')  # mode='w+'为读写打开。

# 2.使用write()函数，向新文件中写入内容
newfile.write('anpeng is studying the operation of file in python')  # 此时文件指针在末尾，若需要读内容则需要使用seek()函数将文件移动指定位置。

# 3.使用read()函数，读取文件中的内容
print(newfile.tell())
newfile.seek(0)
result = newfile.readline()
print(result)
newfile.close()
